{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Animals(){// Mock data for animals\nconst animals=[{id:201,type:'Cow',breed:'Holstein',birthDate:'2020-05-12',status:'Lactating',milkAvg:'22 L/day'},{id:202,type:'Cow',breed:'Jersey',birthDate:'2019-08-23',status:'Lactating',milkAvg:'18 L/day'},{id:203,type:'Bull',breed:'Angus',birthDate:'2018-11-05',status:'Active',milkAvg:'N/A'},{id:204,type:'Cow',breed:'Brown Swiss',birthDate:'2021-02-17',status:'Dry',milkAvg:'0 L/day'},{id:205,type:'Cow',breed:'Holstein',birthDate:'2019-12-30',status:'Lactating',milkAvg:'25 L/day'}];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"content-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Animal Management\"})}),/*#__PURE__*/_jsxs(\"table\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Breed\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Birth Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Milk Average\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:animals.map(animal=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:animal.id}),/*#__PURE__*/_jsx(\"td\",{children:animal.type}),/*#__PURE__*/_jsx(\"td\",{children:animal.breed}),/*#__PURE__*/_jsx(\"td\",{children:animal.birthDate}),/*#__PURE__*/_jsx(\"td\",{children:animal.status}),/*#__PURE__*/_jsx(\"td\",{children:animal.milkAvg})]},animal.id))})]})]});}export default Animals;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Animals","animals","id","type","breed","birthDate","status","milkAvg","children","className","map","animal"],"sources":["/Users/inbaraj/Documents/ProjectsReact/farm-management/src/modules/DairyLivestockManagement/pages/Animals.js"],"sourcesContent":["import React from 'react';\n\nfunction Animals() {\n  // Mock data for animals\n  const animals = [\n    { id: 201, type: 'Cow', breed: 'Holstein', birthDate: '2020-05-12', status: 'Lactating', milkAvg: '22 L/day' },\n    { id: 202, type: 'Cow', breed: 'Jersey', birthDate: '2019-08-23', status: 'Lactating', milkAvg: '18 L/day' },\n    { id: 203, type: 'Bull', breed: 'Angus', birthDate: '2018-11-05', status: 'Active', milkAvg: 'N/A' },\n    { id: 204, type: 'Cow', breed: 'Brown Swiss', birthDate: '2021-02-17', status: 'Dry', milkAvg: '0 L/day' },\n    { id: 205, type: 'Cow', breed: 'Holstein', birthDate: '2019-12-30', status: 'Lactating', milkAvg: '25 L/day' },\n  ];\n\n  return (\n    <div>\n      <div className=\"content-header\">\n        <h1>Animal Management</h1>\n      </div>\n\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Type</th>\n            <th>Breed</th>\n            <th>Birth Date</th>\n            <th>Status</th>\n            <th>Milk Average</th>\n          </tr>\n        </thead>\n        <tbody>\n          {animals.map(animal => (\n            <tr key={animal.id}>\n              <td>{animal.id}</td>\n              <td>{animal.type}</td>\n              <td>{animal.breed}</td>\n              <td>{animal.birthDate}</td>\n              <td>{animal.status}</td>\n              <td>{animal.milkAvg}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Animals;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACjB;AACA,KAAM,CAAAC,OAAO,CAAG,CACd,CAAEC,EAAE,CAAE,GAAG,CAAEC,IAAI,CAAE,KAAK,CAAEC,KAAK,CAAE,UAAU,CAAEC,SAAS,CAAE,YAAY,CAAEC,MAAM,CAAE,WAAW,CAAEC,OAAO,CAAE,UAAW,CAAC,CAC9G,CAAEL,EAAE,CAAE,GAAG,CAAEC,IAAI,CAAE,KAAK,CAAEC,KAAK,CAAE,QAAQ,CAAEC,SAAS,CAAE,YAAY,CAAEC,MAAM,CAAE,WAAW,CAAEC,OAAO,CAAE,UAAW,CAAC,CAC5G,CAAEL,EAAE,CAAE,GAAG,CAAEC,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,OAAO,CAAEC,SAAS,CAAE,YAAY,CAAEC,MAAM,CAAE,QAAQ,CAAEC,OAAO,CAAE,KAAM,CAAC,CACpG,CAAEL,EAAE,CAAE,GAAG,CAAEC,IAAI,CAAE,KAAK,CAAEC,KAAK,CAAE,aAAa,CAAEC,SAAS,CAAE,YAAY,CAAEC,MAAM,CAAE,KAAK,CAAEC,OAAO,CAAE,SAAU,CAAC,CAC1G,CAAEL,EAAE,CAAE,GAAG,CAAEC,IAAI,CAAE,KAAK,CAAEC,KAAK,CAAE,UAAU,CAAEC,SAAS,CAAE,YAAY,CAAEC,MAAM,CAAE,WAAW,CAAEC,OAAO,CAAE,UAAW,CAAC,CAC/G,CAED,mBACER,KAAA,QAAAS,QAAA,eACEX,IAAA,QAAKY,SAAS,CAAC,gBAAgB,CAAAD,QAAA,cAC7BX,IAAA,OAAAW,QAAA,CAAI,mBAAiB,CAAI,CAAC,CACvB,CAAC,cAENT,KAAA,UAAOU,SAAS,CAAC,YAAY,CAAAD,QAAA,eAC3BX,IAAA,UAAAW,QAAA,cACET,KAAA,OAAAS,QAAA,eACEX,IAAA,OAAAW,QAAA,CAAI,IAAE,CAAI,CAAC,cACXX,IAAA,OAAAW,QAAA,CAAI,MAAI,CAAI,CAAC,cACbX,IAAA,OAAAW,QAAA,CAAI,OAAK,CAAI,CAAC,cACdX,IAAA,OAAAW,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBX,IAAA,OAAAW,QAAA,CAAI,QAAM,CAAI,CAAC,cACfX,IAAA,OAAAW,QAAA,CAAI,cAAY,CAAI,CAAC,EACnB,CAAC,CACA,CAAC,cACRX,IAAA,UAAAW,QAAA,CACGP,OAAO,CAACS,GAAG,CAACC,MAAM,eACjBZ,KAAA,OAAAS,QAAA,eACEX,IAAA,OAAAW,QAAA,CAAKG,MAAM,CAACT,EAAE,CAAK,CAAC,cACpBL,IAAA,OAAAW,QAAA,CAAKG,MAAM,CAACR,IAAI,CAAK,CAAC,cACtBN,IAAA,OAAAW,QAAA,CAAKG,MAAM,CAACP,KAAK,CAAK,CAAC,cACvBP,IAAA,OAAAW,QAAA,CAAKG,MAAM,CAACN,SAAS,CAAK,CAAC,cAC3BR,IAAA,OAAAW,QAAA,CAAKG,MAAM,CAACL,MAAM,CAAK,CAAC,cACxBT,IAAA,OAAAW,QAAA,CAAKG,MAAM,CAACJ,OAAO,CAAK,CAAC,GANlBI,MAAM,CAACT,EAOZ,CACL,CAAC,CACG,CAAC,EACH,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAAF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}